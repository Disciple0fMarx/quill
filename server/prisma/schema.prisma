generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id         String    @id @default(cuid())
  title      String
  slug       String    @unique
  content    String
  published  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // Relations
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String

  // // Simple tagging system
  // tags       String[]

  @@index([slug])
  @@index([authorId])
}

enum UserRole {
  READER
  AUTHOR
  ADMIN
}

model User {
  id             String               @id @default(uuid())
  email          String               @unique
  password       String
  name           String?
  role           UserRole             @default(READER) // "ADMIN" | "AUTHOR"
  refreshTokens  RefreshToken[]
  posts          Post[]
  createdAt      DateTime             @default(now())
  application    AuthorApplication?   @relation("UserApplication")
  reviewedApps   AuthorApplication[]  @relation("ApplicationReviewer")
}

model RefreshToken {
  id           String    @id @default(uuid())
  token        String    @unique
  userId       String
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt    DateTime
  createdAt    DateTime  @default(now())
}

enum ApplicationStatus {
  PENDING
  APPROVED
  REJECTED
}

model AuthorApplication {
  id            String             @id @default(cuid())
  userId        String             @unique
  user          User               @relation(fields: [userId], references: [id], name: "UserApplication", onDelete: Cascade)
  message       String
  status        ApplicationStatus  @default(PENDING)  // APPROVED, REJECTED
  submittedAt   DateTime           @default(now())
  reviewedAt    DateTime?
  reviewedBy    User?              @relation(fields: [reviewedById], references: [id], name: "ApplicationReviewer", onDelete: SetNull)
  reviewedById  String?
  notes         String?            // For admin comments

  @@index([userId])
  @@index([status])
  @@index([submittedAt])
}
